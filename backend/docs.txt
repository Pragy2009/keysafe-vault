Here is an API documentation for the backend Django REST framework app based on the code snippets provided:

API Documentation Passwords Get all passwords
GET /api/pass/
Returns a list of all password objects with id, name, username fields.

Get a single password
GET /api/pass/<int:pk>/
Returns a password object with id, name, username, password, website, notes fields.

Create a new password
POST /api/pass/add/
Creates a new password. Expects name, username, password, website, notes fields in request body.

Returns response with message and new password id.

Update a password
PUT /api/pass/update/<int:pk>/
Updates an existing password. Expects id in URL and name, username, password, website, notes fields in request body.

Returns response with success message.

Delete a password
DELETE /api/pass/delete/<int:pk>/ 
Deletes a password. Expects id in URL.

Returns nothing.

Notes Get all notes
GET /api/notes/
Returns a list of all notes objects with id, name, notes fields.

Get a single note
GET /api/notes/<int:pk>/
Returns a note object with id, name, notes fields.

Create a new note
POST /api/notes/add/
Creates a new note. Expects name, notes fields in request body.

Returns response with message and new note id.

Update a note
PUT /api/notes/update/<int:pk>/  
Updates an existing note. Expects id in URL and name, notes fields in request body.

Returns response with success message.

Delete a note
DELETE /api/notes/delete/<int:pk>/
Deletes a note. Expects id in URL.

Returns nothing.

Cards Get all cards
GET /api/cards/
Returns a list of all card objects with id, name, card_number, card_type, card_cvv, card_exp fields.

Get a single card
GET /api/cards/<int:pk>/
Returns a card object with id, name, card_number, card_type, card_cvv, card_exp fields.

Create a new card
POST /api/cards/add/
Creates a new card. Expects name, card_number, card_type, card_cvv, card_exp fields in request body.

Returns response with message and new card id.

Update a card
PUT /api/cards/update/<int:pk>/
Updates an existing card. Expects id in URL and name, card_number, card_type, card_cvv, card_exp fields in request body.

Returns response with success message.

Delete a card
DELETE /api/cards/delete/<int:pk>/
Deletes a card. Expects id in URL.

Returns nothing.

Files Get all files
GET /api/files/
Returns a list of all file objects with id, name, encryptedFileName fields.

Get a single file
GET /api/files/<int:pk>/ 
Returns a file object with id, name, encryptedFileName fields.

Upload a new file
POST /api/files/add/
Uploads a new file. Expects name, file in request body.

Returns response with message and new file id.

Delete a file
DELETE /api/files/delete/<int:pk>/
Deletes a file. Expects id in URL.

Returns nothing.



 